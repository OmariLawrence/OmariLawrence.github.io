{"version":3,"sources":["Components/pictures/picture.jpg","Components/pictures/egg.png","Components/AboutMe.js","Components/Projects.js","Components/Header.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","AboutMe","props","state","skills","edu","accomp","exp","affil","src","omari","alt","height","width","this","map","skill","index","key","ed","acc","ex","aff","Component","Projects","egg","Header","pagenum","show","num","setState","Navbar","bg","variant","Brand","onClick","switchNumber","Nav","className","Button","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"kHAAAA,EAAOC,QAAU,IAA0B,qC,mBCA3CD,EAAOC,QAAU,IAA0B,iC,wPCqE5BC,EAlEf,YACG,WAAYC,GAAQ,IAAD,8BACf,4CAAMA,KAEDC,MAAQ,CACRC,OAAQ,CAAC,kBACT,4BACA,sBACA,8BACA,kBAEAC,IAAK,CAAC,2BAAG,mDAAH,iBACF,2BAAG,mDAAH,qBACA,2BAAG,2CAAH,6DAGJC,OAAQ,CAAC,iDACL,sFAEJC,IAAK,CAAC,+GACF,8GACA,oDAEJC,MAAO,CAAC,gFACJ,wCAvBM,EADtB,sEA6BQ,OACI,6BACA,8CACA,yBAAKC,IAAKC,IAAOC,IAAI,QAAQC,OAAO,MAAMC,MAAM,QAChD,6BACA,oDACA,iMAGA,6BACA,sCACA,4BACKC,KAAKX,MAAMC,OAAOW,KAAI,SAACC,EAAOC,GAAR,OAAkB,wBAAIC,IAAKD,GAAQD,OAE9D,6BACA,yCACKF,KAAKX,MAAME,IAAIU,KAAI,SAACI,GAAD,OAAQA,KAChC,6BACA,+CACA,4BACKL,KAAKX,MAAMG,OAAOS,KAAI,SAACK,EAAKH,GAAN,OAAgB,wBAAIC,IAAKD,GAAQG,OAE5D,6BACA,0CACA,4BACKN,KAAKX,MAAMI,IAAIQ,KAAI,SAACM,EAAIJ,GAAL,OAAe,wBAAIC,IAAKD,GAAQI,OAExD,6BACA,4CACA,4BACKP,KAAKX,MAAMK,MAAMO,KAAI,SAACO,EAAKL,GAAN,OAAgB,wBAAIC,IAAKD,GAAQK,YA3DvE,GAA6BC,a,iBCedC,MAff,WACI,OACI,6BACI,wCACA,6BACA,0DACA,yBAAKf,IAAKgB,IAAKd,IAAI,MAAKC,OAAO,MAAMC,MAAM,QAC3C,0KCuCGa,E,YAzCX,WAAYxB,GAAQ,IAAD,8BACf,4CAAMA,KAEDC,MAAQ,CACTwB,QAAS,EACTC,KAAM,kBAAC,EAAD,OALK,E,0EASNC,GACTf,KAAKgB,SAAS,CACVH,QAASE,M,+BAIP,IAAD,OACL,OACI,oCACI,kBAACE,EAAA,EAAD,CAAQC,GAAG,UAAUC,QAAQ,QAEzB,kBAACF,EAAA,EAAOG,MAAR,CAAcC,QAAS,kBAAM,EAAKC,aAAa,KAA/C,YACI,kBAACC,EAAA,EAAD,CAAKC,UAAU,WACX,kBAACC,EAAA,EAAD,CAAQJ,QAAS,kBAAM,EAAKC,aAAa,KAAzC,cAKW,GAAtBtB,KAAKX,MAAMwB,SACR,kBAAC,EAAD,MAEmB,GAAtBb,KAAKX,MAAMwB,SACR,kBAAC,EAAD,W,GAhCCJ,a,MCMNiB,MARf,WACE,OACE,yBAAKF,UAAU,OACb,kBAAC,EAAD,QCIcG,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.216fd380.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/picture.3d3c9244.jpg\";","module.exports = __webpack_public_path__ + \"static/media/egg.174f57e9.png\";","import React, { Component } from 'react'\r\nimport omari from './pictures/picture.jpg'\r\n\r\nexport class AboutMe extends Component {\r\n   constructor(props) {\r\n       super(props)\r\n   \r\n       this.state = {\r\n            skills: [\"Python/Java/C++\",\r\n            \"Unity/Game Maker Studio 2\",\r\n            \"HTML/CSS/JavaScript\",\r\n            \"Object Oriented Programming\",\r\n            \"Android Studio\"],\r\n        \r\n            edu: [<p><b>Expected Graduation:</b> October 2020</p>,\r\n                <p><b>Bachelor of Science:</b> Computer Science</p>,\r\n                <p><b>Institution:</b> The University of the West Indies - St Augustine Campue</p>\r\n            ],\r\n        \r\n            accomp: [\"1st Teleios Code Jam Best in Challenge #1 2018\",\r\n                \"3rd University of the West Indies Computing Society Computing Olympiad Competition\"],\r\n        \r\n            exp: [\"09/2019 – Current, Student Lab Assistant, The University of the West Indies – St. Augustine Campus\",\r\n                \"07/2019-07/2019 – Mentor, DCIT Bootcamp, The University of the West Indies – St. Augustine Campus\",\r\n                \"17/10/2019-8/12/2019, Intern, Quenk Technologies\"],\r\n        \r\n            affil: [\"Vice President, University of the West Indies Computing Society, 2019 to 2020\",\r\n                \"Founder, JORM Games, 2018 - current\"]\r\n       }\r\n   }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n            <h1>Omari Lawrence</h1>\r\n            <img src={omari} alt=\"omari\" height=\"10%\" width=\"10%\"/>\r\n            <br/>\r\n            <h2>Professional Summary</h2>\r\n            <p>Proactive Student with skills in Python, Java and C++. \r\n                Eager to bring value to any Software Development establishment through \r\n                hard work and commitment to quality.</p>\r\n            <br/>\r\n            <h2>Skills</h2>\r\n            <ul>\r\n                {this.state.skills.map((skill, index) => <li key={index}>{skill}</li>)}\r\n            </ul>\r\n            <br/>\r\n            <h2>Education</h2>\r\n                {this.state.edu.map((ed) => ed)}\r\n            <br/>\r\n            <h2>Accomplishments</h2>\r\n            <ul>\r\n                {this.state.accomp.map((acc, index) => <li key={index}>{acc}</li>)}\r\n            </ul>\r\n            <br/>\r\n            <h2>Experience</h2>\r\n            <ul>\r\n                {this.state.exp.map((ex, index) => <li key={index}>{ex}</li>)}\r\n            </ul>\r\n            <br/>\r\n            <h2>Affiliations</h2>\r\n            <ul>\r\n                {this.state.affil.map((aff, index) => <li key={index}>{aff}</li>)}\r\n            </ul>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AboutMe\r\n","import React from 'react'\r\nimport egg from './pictures/egg.png'\r\n\r\nfunction Projects() {\r\n    return (\r\n        <div>\r\n            <h1>Projects</h1>\r\n            <br/>\r\n            <h2>Eggcellence 2: Hard Boiled</h2>\r\n            <img src={egg} alt='egg'height=\"20%\" width=\"20%\"/>\r\n            <p>A silly game where you run around a village throwing eggs at \r\n                people and there houses, while trying to avoid being caught by\r\n                the villagers\r\n            </p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Projects\r\n","import React, { Component } from 'react'\r\nimport Navbar from 'react-bootstrap/Navbar'\r\nimport Nav from 'react-bootstrap/Nav'\r\nimport Button from 'react-bootstrap/Button'\r\nimport AboutMe from './AboutMe'\r\nimport Projects from './Projects'\r\n\r\nclass Header extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n            pagenum: 1,\r\n            show: <AboutMe/>\r\n        }\r\n    }\r\n\r\n    switchNumber(num){\r\n        this.setState({\r\n            pagenum: num\r\n        })\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <>\r\n                <Navbar bg=\"primary\" variant=\"dark\">\r\n                    {/* <Button variant=\"primary\" size=\"lg\" onMouseOver={() => this.switchNumber(1)}>About Me</Button> */}\r\n                    <Navbar.Brand onClick={() => this.switchNumber(1)}>About Me</Navbar.Brand>\r\n                        <Nav className=\"mr-auto\">\r\n                            <Button onClick={() => this.switchNumber(2)}>Projects</Button>\r\n                            {/* <Button onClick={() => this.switchNumber(3)}>Mystery</Button> */}\r\n                        </Nav>\r\n                </Navbar>\r\n\r\n                {this.state.pagenum == 1 && (\r\n                    <AboutMe/>\r\n                )}\r\n                {this.state.pagenum == 2 && (\r\n                    <Projects/>\r\n                )}\r\n                {/* {this.state.pagenum == 3 && (\r\n                    <h1>Not a Satisfying Mystery</h1>\r\n                )} */}\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Header\r\n","import React from 'react';\nimport './App.css';\nimport Header from './Components/Header';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}